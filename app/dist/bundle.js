/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/globalchart.js":
/*!*******************************!*\
  !*** ./src/js/globalchart.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar GlobalChart = /*#__PURE__*/function () {\n  function GlobalChart(id_tag, rawData, selectedLocation, x_title, y_title) {\n    _classCallCheck(this, GlobalChart);\n    _defineProperty(this, \"id_tag\", void 0);\n    _defineProperty(this, \"rawData\", void 0);\n    _defineProperty(this, \"selectedLocation\", void 0);\n    _defineProperty(this, \"x_title\", void 0);\n    _defineProperty(this, \"y_title\", void 0);\n    this.id_tag = id_tag;\n    this.rawData = rawData;\n    this.selectedLocation = selectedLocation;\n    this.x_title = x_title;\n    this.y_title = y_title;\n  }\n  _createClass(GlobalChart, [{\n    key: \"doChart\",\n    value: function doChart() {\n      var filteredData = this.filterData();\n      var x_values = filteredData.map(function (d) {\n        return d.xAttr;\n      });\n      var y_values = filteredData.map(function (d) {\n        return d.yAttr;\n      });\n      var xMax = d3.max(x_values);\n      var yMax = d3.max(y_values);\n      var margin = {\n        top: 25,\n        right: 30,\n        bottom: 50,\n        left: 70\n      };\n      var width = 650 - margin.left - margin.right;\n      var height = 550 - margin.top - margin.bottom;\n      var svg = this.createSVG(this.id_tag, margin, width, height);\n      var _this$doAxes = this.doAxes(svg, width, height, xMax, yMax),\n        x = _this$doAxes.x,\n        y = _this$doAxes.y;\n      this.doDotsGroup(svg, filteredData, x, y);\n      this.doTitle(svg, width, margin);\n      this.doAxisLabels(svg, width, height, margin);\n      this.doLegend(svg, width);\n    }\n  }, {\n    key: \"filterData\",\n    value: function filterData() {\n      return raw_data.map(function (player) {\n        var filteredRow = player.data.filter(function (row) {\n          return row.location === selectedLocation;\n        });\n        var selectedRow = filteredRow[0];\n        // console.log(selectedRow)\n\n        if (filteredRow.length === 0) {\n          return {\n            name: player.name,\n            row: {}\n          };\n        }\n\n        // console.log('select X: ', selected_x)\n        // console.log('selected Y: ', selected_y)\n\n        var selectedData = {\n          id: selectedRow.id,\n          name: selectedRow.name,\n          country: selectedRow.country,\n          xAttr: selectedRow[x_selected],\n          yAttr: selectedRow[y_selected]\n        };\n        // return { name: player.name, row: selectedData};\n\n        return {\n          name: player.name,\n          id: selectedData.id,\n          country: selectedData.country,\n          xAttr: selectedData.xAttr,\n          yAttr: selectedData.yAttr\n        };\n      });\n    }\n  }, {\n    key: \"createSVG\",\n    value: function createSVG() {\n      return d3.select(id_tag).append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).style('background-color', '#131054') // background color\n      .style('border', '4px solid #ccc') // Set the border properties here\n      .append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n    }\n  }, {\n    key: \"doMouseOver\",\n    value: function doMouseOver(event, d) {\n      // show tooltip on mouseover\n      d3.select('.tooltip').style('opacity', 0.9).html(\"\\n      <div>Name: \".concat(d.name, \"</div>\\n      <div>Country: \").concat(d.country, \"</div>\\n      <div>\").concat(x_title, \": \").concat(d.xAttr, \"</div>\\n      <div>\").concat(y_title, \": \").concat(d.yAttr, \"</div>        \\n    \"));\n      // .style('left', (d3.event.pageX + 10) + 'px')\n      // .style('top', (d3.event.pageY - 28) + 'px');\n    }\n  }, {\n    key: \"doDotsGroup\",\n    value: function doDotsGroup(svg, filteredData, x, y) {\n      svg.append('g').selectAll('dot').data(filteredData).enter().append('circle').attr('cx', function (d) {\n        if (d.xAttr === 'na' || d.yAttr === 'na') {\n          return null;\n        } else {\n          return x(d.xAttr);\n        }\n      }).attr('cy', function (d) {\n        if (d.xAttr === 'na' || d.yAttr === 'na') {\n          return null;\n        } else if (d.yAttr !== 'na') {\n          return y(d.yAttr);\n        }\n      }).attr('r', 3.0).style('fill', function (d) {\n        // Specify color based on the 'country' attribute\n        if (d.country === 'BAN' || d.country === 'IND' || d.country === 'SL') {\n          return '#e41a1c';\n        } else if (d.country === 'SA' || d.country === 'ENG' || d.country === 'NZ' || d.country === 'AUS') {\n          return '#377eb8';\n        } else {\n          return '#4daf4a';\n        }\n      })\n\n      //call helper fn. on mouseover\n      .on('mouseover', function (event, d) {\n        doMouseOver(event, d);\n      })\n      //hide the tooltip on mouseout\n      .on('mouseout', function (d) {\n        d3.select('.tooltip').style('opacity', 0);\n      });\n    }\n  }, {\n    key: \"doAxisLabels\",\n    value: function doAxisLabels(svg, width, height, margin) {\n      // Add X axis label\n      svg.append('text').attr('transform', 'translate(' + width / 2 + ',' + (height + 45) + ')').style('text-anchor', 'middle').style('font-size', '14px').style('fill', '#ffffff').text(x_title);\n\n      // Add Y axis label\n      svg.append('text').attr('transform', 'rotate(-90)').attr('y', 0 - margin.left).attr('x', 0 - height / 2).attr('dy', '1em').style('text-anchor', 'middle').style('font-size', '14px').style('fill', '#ffffff').text(y_title);\n    }\n  }, {\n    key: \"doLegend\",\n    value: function doLegend(svg, width) {\n      var legend = svg.append('g').attr('class', 'legend').attr('transform', 'translate(' + (width - 40) + ',' + 2 + ')'); // Adjust the position as needed\n\n      // Define the legend data based on the 'country' attribute\n      var legendData = [{\n        label: 'BIS',\n        color: '#e41a1c'\n      }, {\n        label: 'SENA',\n        color: '#377eb8'\n      }, {\n        label: 'Other',\n        color: '#4daf4a'\n      }];\n\n      // Create the legend items\n      var legendItems = legend.selectAll('.legend-item').data(legendData).enter().append('g').attr('class', 'legend-item').attr('transform', function (d, i) {\n        return \"translate(0, \".concat(i * 20, \")\");\n      }); // Adjust the spacing between legend items\n\n      // Add the colored rectangles to the legend items\n      legendItems.append('rect').attr('x', 0).attr('y', 0).attr('width', 12).attr('height', 12).style('fill', function (d) {\n        return d.color;\n      });\n\n      // Add the text labels to the legend items\n      legendItems.append('text').attr('x', 20).attr('y', 6).attr('dy', '0.35em').style('font-size', '12px').style('fill', '#ffffff').text(function (d) {\n        return d.label;\n      });\n    }\n  }, {\n    key: \"doAxes\",\n    value: function doAxes(svg, width, height, xMax, yMax) {\n      // Add X axis\n      var x = d3.scaleLinear().domain([0, xMax + 50]).range([0, width]);\n      svg.append('g').attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(x)).style('fill', '#ffffff').style('color', '#ffffff');\n\n      // Add Y axis\n      var y = d3.scaleLinear().domain([0, yMax + 40]).range([height, 0]);\n      svg.append('g').call(d3.axisLeft(y)).style('fill', '#ffffff').style('color', '#ffffff');\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"doTitle\",\n    value: function doTitle(svg, width, margin) {\n      svg.append('text').attr('x', width / 2).attr('y', margin.top - 20).attr('text-anchor', 'middle').style('font-size', '16px').style('fill', '#ffffff').text(y_title + ' vs. ' + x_title);\n    }\n  }]);\n  return GlobalChart;\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GlobalChart);\n\n//# sourceURL=webpack://app/./src/js/globalchart.js?");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _globalchart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./globalchart */ \"./src/js/globalchart.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar selectedLocation = 'C';\nvar x_selected = 'none';\nvar y_selected = 'none';\nvar x_title = 'X title';\nvar y_title = 'Y title';\nvar raw_data;\n\n//Do these initial calls once the DOM is finished loading\nwindow.addEventListener('DOMContentLoaded', function () {\n  setupDropdownListener();\n  readData('./data/data-statsguru-3.csv', '#raw').then(console.log('Data read successfully'))[\"catch\"](function (error) {\n    return console.log('Error: ', error.message);\n  });\n});\nfunction setupDropdownListener() {\n  var location_menu = document.getElementById('location-menu');\n  var x_attr_menu = document.getElementById('x-attr-menu');\n  var y_attr_menu = document.getElementById('y-attr-menu');\n  location_menu.addEventListener('change', function () {\n    selectedLocation = location_menu.value;\n    console.log('selected location: ' + selectedLocation);\n  });\n  x_attr_menu.addEventListener('change', function () {\n    var selected_x_option = x_attr_menu.options[x_attr_menu.selectedIndex];\n    x_title = selected_x_option.textContent;\n    x_selected = selected_x_option.value;\n    console.log('selected x-attribute: ' + x_selected);\n    // console.log('X title: ' + x_title)\n  });\n\n  y_attr_menu.addEventListener('change', function () {\n    var selected_y_option = y_attr_menu.options[y_attr_menu.selectedIndex];\n    y_title = selected_y_option.textContent;\n    y_selected = selected_y_option.value;\n    console.log('selected y-attribute: ' + y_selected);\n    // console.log('Y title: ' + y_title)\n  });\n}\n\nfunction readData(file, id) {\n  return d3.csv(file).then(processData)[\"catch\"](function (error) {\n    return console.log('Error: ', error.message);\n  });\n}\nfunction processData(data) {\n  //nest the data by name\n  var rolledUpData = d3.rollup(data, reduceData, groupBy);\n  var players = Array.from(rolledUpData, function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      name = _ref2[0],\n      data = _ref2[1];\n    return {\n      name: name,\n      data: data\n    };\n  });\n  raw_data = players;\n  console.log('raw_data: ', raw_data);\n}\n\n//key function\nfunction groupBy(data) {\n  // return data.Player;\n  return data.Player.slice(0, data.Player.indexOf('('));\n}\n\n//reducer function\nfunction reduceData(values) {\n  return values.map(function (row) {\n    return {\n      id: parseInt(row.ID),\n      name: row.Player.slice(0, row.Player.indexOf('(')) || 'na',\n      country: row.Player.slice(row.Player.indexOf('(') + 1, row.Player.length - 1) || 'na',\n      location: row.Location || 'na',\n      span: row.Span || 'na',\n      matches_played: parseInt(row.Mat) || 'na',\n      innings: parseInt(row.Inns) || 'na',\n      not_outs: parseInt(row.NO) || 'na',\n      runs: parseInt(row.Runs) || 'na',\n      high_score: parseInt(row.HS) || 'na',\n      batting_avg: parseFloat(row.Ave) || 'na',\n      balls_faced: parseInt(row.BF) || 'na',\n      strike_rate: parseFloat(row.SR) || 'na',\n      centuries: row['100'] === '0' ? 0 : parseInt(row['100']) || 'na',\n      half_cents: row['50'] === '0' ? 0 : parseInt(row['50']) || 'na',\n      below_fifties: row['0'] === '0' ? 0 : parseInt(row['0']) || 'na'\n    };\n  });\n}\n\n// /** \n//  * Filters the raw_data by selected location and attributes\n//  * \n//  * @param {array} rawData \n//  * @param {string} selectedLocation \n//  * @returns {array} array of (filtered) player objects\n//  */\n// function filterData(rawData, selectedLocation) {\n\n//   return raw_data.map(player => {\n//     const filteredRow = player.data.filter(row => row.location === selectedLocation);\n//     const selectedRow = filteredRow[0];\n//     // console.log(selectedRow)\n\n//     if (filteredRow.length === 0) {\n//       return { name: player.name, row: {} };\n//     }\n\n//     // console.log('select X: ', selected_x)\n//     // console.log('selected Y: ', selected_y)\n\n//     const selectedData = {\n//       id: selectedRow.id,\n//       name: selectedRow.name,\n//       country: selectedRow.country,\n//       xAttr: selectedRow[x_selected],\n//       yAttr: selectedRow[y_selected],\n\n//     };\n//     // return { name: player.name, row: selectedData};\n\n//     return { name: player.name, id: selectedData.id,  country: selectedData.country, xAttr: selectedData.xAttr, yAttr: selectedData.yAttr };\n//   });\n\n// }\n\n// /**\n//  * \n//  * @param {*} id_tag \n//  * @param {*} margin \n//  * @param {*} width \n//  * @param {*} height \n//  */\n// function createSVG(id_tag, margin, width, height) {\n\n//   return d3.select(id_tag)\n//     .append('svg')\n//       .attr('width', width + margin.left + margin.right)\n//       .attr('height', height + margin.top + margin.bottom)\n//       .style('background-color', '#131054') // background color\n//       .style('border', '4px solid #ccc') // Set the border properties here\n//     .append('g')\n//       .attr('transform',\n//             'translate(' + margin.left + ',' + margin.top + ')');  \n\n// }\n\n// /**\n//  * Uses tooltip to display pop-up on mouseover\n//  * \n//  * @param {*} event \n//  * @param {*} d \n//  */\n// function doMouseOver(event, d) {\n//   // show tooltip on mouseover\n//   d3.select('.tooltip')\n//   .style('opacity', 0.9)\n//   .html(`\n//     <div>Name: ${d.name}</div>\n//     <div>Country: ${d.country}</div>\n//     <div>${x_title}: ${d.xAttr}</div>\n//     <div>${y_title}: ${d.yAttr}</div>        \n//   `)                        \n//   // .style('left', (d3.event.pageX + 10) + 'px')\n//   // .style('top', (d3.event.pageY - 28) + 'px');\n\n// }\n\n// /**\n//  * configure and draw the dot objects\n//  * \n//  * @param {*} svg \n//  * @param {*} filteredData \n//  * @param {*} x \n//  * @param {*} y \n//  */\n// function doDotsGroup(svg, filteredData, x, y) {\n//   svg.append('g')    \n//     .selectAll('dot')\n//     .data(filteredData)\n//     .enter()\n//     .append('circle')\n//       .attr('cx', function (d) {\n//         if (d.xAttr === 'na' || d.yAttr === 'na') {\n//           return null;\n//         } else {\n//           return x(d.xAttr);\n//         }\n//       })\n\n//       .attr('cy', function (d) {\n//         if (d.xAttr === 'na' || d.yAttr === 'na') {\n//           return null;\n//         } else if (d.yAttr !== 'na') {\n//           return y(d.yAttr);\n//         }\n//       })\n\n//       .attr('r', 3.0)\n//       .style('fill', function(d) {\n//         // Specify color based on the 'country' attribute\n//         if (d.country === 'BAN' || d.country === 'IND' || d.country === 'SL') {\n//           return '#e41a1c';\n//         } else if (d.country === 'SA' || d.country === 'ENG' || d.country === 'NZ' || d.country === 'AUS') {\n//           return '#377eb8';\n//         } else {\n//           return '#4daf4a';\n//         }\n//       })\n\n//       //call helper fn. on mouseover\n//       .on('mouseover', function(event, d) {\n//         doMouseOver(event, d)\n//       })\n//       //hide the tooltip on mouseout\n//       .on('mouseout', function(d) {        \n//         d3.select('.tooltip').style('opacity', 0);\n//       });\n// }\n\n// /**\n//  * \n//  * @param {*} svg \n//  * @param {*} width \n//  * @param {*} height \n//  * @param {*} margin \n//  */\n// function doAxisLabels(svg, width, height, margin) {\n//   // Add X axis label\n//   svg.append('text')\n//     .attr('transform', 'translate(' + (width / 2) + ',' + (height + 45) + ')')\n//     .style('text-anchor', 'middle')\n//     .style('font-size', '14px')\n//     .style('fill', '#ffffff')\n//     .text(x_title);\n\n//   // Add Y axis label\n//   svg.append('text')\n//     .attr('transform', 'rotate(-90)')\n//     .attr('y', 0 - margin.left)\n//     .attr('x',0 - (height / 2))\n//     .attr('dy', '1em')\n//     .style('text-anchor', 'middle')\n//     .style('font-size', '14px')\n//     .style('fill', '#ffffff')\n//     .text(y_title);\n// }\n\n// /**\n//  * \n//  * @param {*} svg \n//  * @param {*} width \n//  * @param {*} height \n//  */\n// function doLegend(svg, width) {  \n//   let legend = svg.append('g')\n//   .attr('class', 'legend')\n//   .attr('transform', 'translate(' + (width - 40) + ',' + 2 + ')'); // Adjust the position as needed\n\n//   // Define the legend data based on the 'country' attribute\n//   let legendData = [\n//     { label: 'BIS', color: '#e41a1c' },\n//     { label: 'SENA', color: '#377eb8' },\n//     { label: 'Other', color: '#4daf4a' }\n//   ];\n\n//   // Create the legend items\n//   let legendItems = legend.selectAll('.legend-item')\n//     .data(legendData)\n//     .enter()\n//     .append('g')\n//     .attr('class', 'legend-item')\n//     .attr('transform', (d, i) => `translate(0, ${i * 20})`); // Adjust the spacing between legend items\n\n//   // Add the colored rectangles to the legend items\n//   legendItems.append('rect')\n//     .attr('x', 0)\n//     .attr('y', 0)\n//     .attr('width', 12)\n//     .attr('height', 12)\n//     .style('fill', d => d.color);\n\n//   // Add the text labels to the legend items\n//   legendItems.append('text')\n//     .attr('x', 20)\n//     .attr('y', 6)\n//     .attr('dy', '0.35em')\n//     .style('font-size', '12px')\n//     .style('fill', '#ffffff')\n//     .text(d => d.label);\n// }\n\n// /**\n//  * \n//  * @param {*} svg \n//  * @param {*} width \n//  * @param {*} height \n//  * @param {*} xMax \n//  * @param {*} yMax \n//  */\n// function doAxes(svg, width, height, xMax, yMax) {\n\n// }\n\n// /**\n//  * \n//  * @param {*} svg \n//  * @param {*} width \n//  * @param {*} margin \n//  */\n// function doTitle(svg, width, margin) {  \n//   svg.append('text')\n//   .attr('x', (width / 2))\n//   .attr('y', margin.top - 20)\n//   .attr('text-anchor', 'middle')\n//   .style('font-size', '16px')\n//   .style('fill', '#ffffff')\n//   .text(y_title + ' vs. ' + x_title);\n// }\n\n// function doChart(id_tag) {\n//   // console.log(raw_data)\n//   // array of player objects (filtered by location & attributes)\n//   const filteredData = filterData(raw_data, selectedLocation)\n\n//   console.log('Data_filtered_by_' + selectedLocation, filteredData)\n\n//   //array of 'matches_played' values \n//   let x_values = filteredData.map((d) => d.xAttr)\n//   //array of 'runs' values\n//   let y_values = filteredData.map((d) => d.yAttr)\n\n//   // console.log(x_values)\n//   // console.log(y_values)\n\n//   let xMax = d3.max(x_values)\n//   let yMax = d3.max(y_values)\n\n//   // set the dimensions and margins of the graph\n//   let margin = {top: 25, right: 30, bottom: 50, left: 70};\n//   let width = 650 - margin.left - margin.right;\n//   let height = 550 - margin.top - margin.bottom;\n//   let svg = createSVG(id_tag, margin, width, height);\n\n//   let x, y\n\n//   // Create x and y axes\n//   ({ x, y } = doAxes(svg, width, height, xMax, yMax));\n\n//   // Create and draw the dot objects\n//   doDotsGroup(svg, filteredData, x, y);\n\n//   // Create chart title\n//   doTitle(svg, width, margin);\n\n//   // Create the axis labels\n//   doAxisLabels(svg, width, height, margin);\n\n//   // Create the legend\n//   doLegend(svg, width);\n// }\n\nfunction doChart(id_tag) {\n  var gc = new _globalchart__WEBPACK_IMPORTED_MODULE_0__[\"default\"](id_tag, raw_data, selectedLocation, x_title, y_title);\n  gc.doChart();\n}\nfunction isPositiveInteger(value) {\n  // Check if the value is a number\n  if (typeof value !== 'number') {\n    return false;\n  }\n  // Check if the value is an integer\n  if (!Number.isInteger(value)) {\n    return false;\n  }\n  // Check if the value is positive\n  if (value < 0) {\n    return false;\n  }\n  return true;\n}\n\n//# sourceURL=webpack://app/./src/js/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/index.js");
/******/ 	
/******/ })()
;